workflows:
  react-native-ios:
    name: Unbound iOS Build
    max_build_duration: 60
    instance_type: mac_mini_m2

    integrations:
      app_store_connect: codemagic

    environment:
      ios_signing:
        distribution_type: app_store
        bundle_identifier: com.unboundapp
      vars:
        BUNDLE_ID: "com.unboundapp"
        XCODE_WORKSPACE: "unboundapp.xcworkspace"
        XCODE_SCHEME: "unboundapp"
        APP_STORE_APPLE_ID: 6753550822
      node: 18.20.3

    scripts:
      - name: Install npm dependencies
        script: |
          npm install

      - name: Install CocoaPods dependencies
        script: |
          cd ios && pod install

      - name: Set up Node environment for Xcode
        script: |
          # Create .xcode.env.local with node path for Xcode build scripts
          echo "export NODE_BINARY=$(which node)" > ios/.xcode.env.local
          echo "Node path configured: $(cat ios/.xcode.env.local)"

      - name: Set up code signing settings on Xcode project
        script: |
          xcode-project use-profiles

      - name: Increment build number
        script: |
          cd $CM_BUILD_DIR/ios
          # Try to get latest build number, fallback to TestFlight builds
          LATEST_BUILD_NUMBER=$(app-store-connect get-latest-testflight-build-number "$APP_STORE_APPLE_ID" || echo "0")
          if [ -z "$LATEST_BUILD_NUMBER" ] || [ "$LATEST_BUILD_NUMBER" = "0" ]; then
            # If no builds found, try app store builds
            LATEST_BUILD_NUMBER=$(app-store-connect get-latest-app-store-build-number "$APP_STORE_APPLE_ID" || echo "0")
          fi
          if [ -z "$LATEST_BUILD_NUMBER" ] || [ "$LATEST_BUILD_NUMBER" = "0" ]; then
            # Fallback to known last build if API fails
            LATEST_BUILD_NUMBER=16
          fi
          echo "Latest build number: $LATEST_BUILD_NUMBER"
          NEW_BUILD_NUMBER=$(($LATEST_BUILD_NUMBER + 1))
          echo "Setting new build number: $NEW_BUILD_NUMBER"
          agvtool new-version -all $NEW_BUILD_NUMBER

      - name: Build ipa for distribution
        script: |
          xcode-project build-ipa \
            --workspace "$CM_BUILD_DIR/ios/$XCODE_WORKSPACE" \
            --scheme "$XCODE_SCHEME"

    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM

    publishing:
      email:
        recipients:
          - loganvaleski@gmail.com # Update with your email
        notify:
          success: false
          failure: true

      app_store_connect:
        auth: integration

        # Start with TestFlight only
        submit_to_testflight: true # Set to true when ready

        # Don't submit to App Store initially
        submit_to_app_store: false